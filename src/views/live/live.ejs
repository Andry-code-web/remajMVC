<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link rel="stylesheet" href="/css/live/live.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <!-- CDN DE ICONOS REMIX -->
  <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet" />
  <!-- ESTILOS GLOBALES -->
  <link rel="stylesheet" href="/css/globales/globales.css">
</head>
<body>
  
  <!-- COMPONENTE HEADER -->
  <%- include('../partials/navbar') %>
  
  <!-- live_Tarjeta  -->
  <section class="contenedor_live" id="contenedor_live">
    <div class="auction-grid" id="auction-grid">
      <% liveData.forEach(auction => { %>
        <div class="auction-card">
          <div class="auction-image-container">
            <img 
              src="data:image/png;base64,<%= auction.imagen %>" 
              alt="Imagen de remate <%= auction.id %>" 
              class="auction-image">
          </div>
          <div class="auction-content">
            <h3 class="title"><%= auction.descripcion %></h3>
            <!-- Más contenido aquí -->
          </div>
        </div>
      <% }) %>
    </div>
  </section>
  
  

<div class="modal" id="modal">
    <div class="modal-content">
        <span class="close-modal" onclick="closeModal()">&times;</span>
        <div id="modal-body"></div>
    </div>
</div>

<script>
  const auctionData = <%- JSON.stringify(liveData) %>;
</script>



<!-- Scripts -->
    <script src="/js/script_live.js" type="module"></script>
    <script type="module">
      import { NetworkAnimationL } from '/js/componentes/network.live.js';
      document.addEventListener('DOMContentLoaded', () => {
          const canvas = document.getElementById('particleCanvas');
          if (canvas) {
              const networkAnimationL = new NetworkAnimationL(canvas);
              canvas.width = window.innerWidth;
              canvas.height = window.innerHeight;
              
              window.addEventListener('resize', () => {
                  canvas.width = window.innerWidth;
                  canvas.height = window.innerHeight;
              });
          }
      });
  </script>
<!-- navbar -->
<script>
  let lastScrollTop = 0; // Posición previa del scroll
  const header = document.getElementById('header'); // Encabezado
  const liveSection = document.getElementById('contenedor_live'); // Sección Live

  window.addEventListener('scroll', () => {
    const currentScrollTop = window.scrollY || document.documentElement.scrollTop;

    // Desaparece al bajar el scroll
    if (currentScrollTop > lastScrollTop && currentScrollTop > liveSection.offsetTop) {
      header.style.transform = 'translateY(-100%)'; // Desliza hacia arriba
      header.style.opacity = '0'; // Desvanece
    } else {
      // Aparece al subir el scroll
      header.style.transform = 'translateY(0)'; // Vuelve a su posición
      header.style.opacity = '1'; // Reaparece
    }

    lastScrollTop = currentScrollTop <= 0 ? 0 : currentScrollTop; // Evita valores negativos
  });
</script>




<!-- particulas  -->
<!-- script particulas login -->
<script type="module" src="/js/componentes/network.live.js"></script>
<link rel="stylesheet" href="/css/live/live.css">

<script type="module">
  import {
    NetworkAnimationL
  } from '../../js/componentes/network.live.js';
  const canvas = document.getElementById("particleCanvas");
  const networkAnimationL = new NetworkAnimationL(canvas);

  document.getElementById('loginForm').addEventListener('submit', async function(e) {
    e.preventDefault();

    const formData = new FormData(this);
    const data = Object.fromEntries(formData);

    try {
      const response = await fetch('/auth/loginP', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      });

      if (response.redirected) {
        window.location.href = response.url;
      } else {
        const responseData = await response.json();
        throw new Error(responseData.message);
      }
    } catch (error) {
      alert(error.message);
    }
  });
</script>

  <!-- script live -->
<script src="/js/script_live.js"></script>

</body>
</html>